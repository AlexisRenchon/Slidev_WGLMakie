!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("markdown-it/lib/token.js")):"function"==typeof define&&define.amd?define(["markdown-it/lib/token.js"],t):(e||self).markdownItTaskLists=t(e.Token)}(this,function(e){function t(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var n=/*#__PURE__*/t(e),r=/^ *\[([\sx])] /i;function i(e,t){for(var n=e[t].level-1,r=t-1;r>=0;r--)if(e[r].level===n)return e[r]}function a(e,t){if(null!=e.children){var i=function(e){return e.map?"task-item-"+e.map[0]:"task-item-"+Math.ceil(1e7*Math.random()-1e3)}(e);e.children.splice(0,0,function(e,t,i){var a=new n.default("taskListItemCheckbox","",0);t||a.attrSet("disabled","true"),e.map&&a.attrSet("line",e.map[0].toString()),a.attrSet("id",i);var l=r.exec(e.content);return"x"===(null==l?void 0:l[1].toLowerCase())&&a.attrSet("checked","true"),a}(e,t.enabled,i)),e.children[1].content=e.children[1].content.replace(r,""),t.label&&(e.children.splice(1,0,function(e){var t=new n.default("taskListItemLabel_open","",1);return t.attrSet("id",e),t}(i)),e.children.push(new n.default("taskListItemLabel_close","",-1)))}}return function(e,t){void 0===t&&(t={enabled:!1,label:!1,lineNumber:!1}),e.core.ruler.after("inline","task-lists",function(e){return function(e,t){for(var n=e.tokens,l=2;l<n.length;l++)if("inline"===(s=n)[c=l].type&&"paragraph_open"===s[c-1].type&&"list_item_open"===s[c-2].type&&r.test(s[c].content)){a(n[l],t),n[l-2].attrJoin("class","task-list-item "+(t.enabled?" enabled":""));var o=i(n,l-2);o&&o.attrJoin("class","contains-task-list")}var s,c;return!1}(e,t)}),e.renderer.rules.taskListItemCheckbox=function(e){var n=e[0],r=n.attrGet("checked")?'checked="" ':"",i=n.attrGet("disabled")?'disabled="" ':"",a=n.attrGet("line"),l='id="'+n.attrGet("id")+'" ';return'<input class="task-list-item-checkbox" type="checkbox" '+r+i+(a&&t.lineNumber?'data-line="'+a+'" ':"")+l+"/>"},e.renderer.rules.taskListItemLabel_close=function(){return"</label>"},e.renderer.rules.taskListItemLabel_open=function(e){return'<label for="'+e[0].attrGet("id")+'">'}}});
//# sourceMappingURL=index.umd.js.map
