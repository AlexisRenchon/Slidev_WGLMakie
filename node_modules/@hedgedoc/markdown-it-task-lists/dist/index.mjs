import e from"markdown-it/lib/token.js";const t=/^ *\[([\sx])] /i;function n(e,n={enabled:!1,label:!1,lineNumber:!1}){e.core.ruler.after("inline","task-lists",e=>function(e,n){const l=e.tokens;for(let e=2;e<l.length;e++){if("inline"!==(a=l)[s=e].type||"paragraph_open"!==a[s-1].type||"list_item_open"!==a[s-2].type||!t.test(a[s].content))continue;i(l[e],n),l[e-2].attrJoin("class","task-list-item "+(n.enabled?" enabled":""));const c=r(l,e-2);c&&c.attrJoin("class","contains-task-list")}var a,s;return!1}(e,n)),e.renderer.rules.taskListItemCheckbox=e=>{const t=e[0],r=t.attrGet("checked")?'checked="" ':"",i=t.attrGet("disabled")?'disabled="" ':"",l=t.attrGet("line"),a=`id="${t.attrGet("id")}" `;return`<input class="task-list-item-checkbox" type="checkbox" ${r}${i}${l&&n.lineNumber?`data-line="${l}" `:""}${a}/>`},e.renderer.rules.taskListItemLabel_close=()=>"</label>",e.renderer.rules.taskListItemLabel_open=e=>`<label for="${e[0].attrGet("id")}">`}function r(e,t){const n=e[t].level-1;for(let r=t-1;r>=0;r--)if(e[r].level===n)return e[r]}function i(n,r){if(null==n.children)return;const i=function(e){return e.map?`task-item-${e.map[0]}`:`task-item-${Math.ceil(1e7*Math.random()-1e3)}`}(n);n.children.splice(0,0,function(n,r,i){const l=new e("taskListItemCheckbox","",0);r||l.attrSet("disabled","true"),n.map&&l.attrSet("line",n.map[0].toString()),l.attrSet("id",i);const a=t.exec(n.content);return"x"===(null==a?void 0:a[1].toLowerCase())&&l.attrSet("checked","true"),l}(n,r.enabled,i)),n.children[1].content=n.children[1].content.replace(t,""),r.label&&(n.children.splice(1,0,function(t){const n=new e("taskListItemLabel_open","",1);return n.attrSet("id",t),n}(i)),n.children.push(new e("taskListItemLabel_close","",-1)))}export{n as default};
//# sourceMappingURL=index.mjs.map
